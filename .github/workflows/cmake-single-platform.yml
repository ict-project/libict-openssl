# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Version
      run: |
        git fetch --depth=100 origin
        git fetch --tags
        export GIT_VERSION=$(git describe)
        echo GIT_VERSION=$GIT_VERSION
        echo GIT_VERSION=$GIT_VERSION >> "$GITHUB_ENV"

    - name: Build
      run: |
        make
        export PROJECT_NAME=$(cat ./build/project-name.txt)
        echo PROJECT_NAME=$PROJECT_NAME
        echo PROJECT_NAME=$PROJECT_NAME >> "$GITHUB_ENV"

    - name: Test
      run: make test

    - name: Package
      run: make package

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-${{ runner.os }}-${{ env.GIT_VERSION }}
        path: |
          build/libict-*.tar.Z
          build/libict-*.tar.gz
          build/libict-*.sh
          build/libict-*.deb
          build/libict-*.rpm
        overwrite: true
 